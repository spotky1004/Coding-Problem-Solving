const lines = "812 1 1 131,544 2 0 443,488 13 0 48,636 15 2 875,110 21 1 55,506 22 2 764,146 24 2 845,388 27 0 117,475 28 1 44,296 38 2 208,840 39 2 612,76 42 2 330,408 42 2 153,258 46 2 65,790 47 0 213,0 48 0 20,872 50 1 529,398 54 2 62,703 55 0 231,233 59 1 234,96 62 2 175,854 63 0 149,0 64 0 297,657 64 1 298,428 65 2 751,246 66 2 279,637 68 3 9,824 69 2 303,50 70 3 832,661 72 1 258,856 77 2 723,70 80 0 864,124 83 2 506,396 90 2 43,612 91 2 818,643 92 3 257,84 98 3 371,507 99 0 5,831 99 1 193,736 103 2 124,202 106 2 44,590 106 3 413,827 108 3 176,670 109 2 93,674 112 2 658,898 121 2 419,678 124 0 325,0 125 0 913,454 128 0 7,484 129 2 708,477 130 1 160,707 131 3 95,680 135 0 131,734 136 2 263,872 141 0 117,151 143 1 152,362 143 0 198,816 149 2 502,620 150 3 203,916 154 3 87,429 157 0 510,198 158 2 428,328 163 2 264,207 164 1 30,611 167 0 311,978 173 3 25,978 175 0 25,0 176 0 315,696 177 2 302,956 179 2 759,122 180 2 791,347 182 0 271,374 188 0 203,373 191 1 4,391 194 1 217,24 195 2 550,592 199 1 305,470 201 3 468,0 202 3 334,767 205 0 137,564 207 2 764,236 208 2 487,676 212 3 30,895 215 1 74,780 218 2 426,55 226 1 56,302 227 0 236,348 229 2 294,556 230 3 447,412 237 1 413,84 238 0 164,238 242 3 186,0 245 3 46,303 253 1 304,756 256 2 323,724 257 0 279,0 258 0 222,853 259 1 250,215 260 3 629,964 260 1 307,356 261 0 602,760 264 2 57,874 268 0 40,345 278 0 109,570 282 2 514,454 283 2 627,553 283 0 346,1002 284 1 295,0 288 3 408,401 289 3 415,849 291 1 585,1002 295 1 245,183 297 1 112,192 297 2 187,1002 297 1 163,670 298 0 333,0 299 0 183,338 301 3 148,274 302 2 570,292 305 3 568,312 306 3 127,580 306 3 150,811 306 1 120,102 307 2 457,326 312 2 385,197 314 0 3,739 320 1 136,332 321 2 557,715 324 1 551,887 324 0 116,0 325 0 340,450 325 2 622,677 325 1 226,810 345 2 563,839 352 3 129,586 359 2 23,943 362 0 60,0 363 0 755,501 369 0 163,839 369 1 458,314 376 2 118,772 381 1 183,706 384 0 102,26 385 2 177,941 390 1 451,724 396 3 279,572 397 3 301,746 400 2 188,632 406 2 225,571 413 1 341,99 415 1 100,217 417 1 73,966 420 0 37,0 421 0 205,505 421 1 332,604 423 2 438,643 426 1 323,800 427 2 203,208 429 3 454,944 434 2 48,284 436 0 301,384 438 1 265,322 443 1 79,302 453 3 183,448 456 3 199,686 466 0 317,0 467 0 95,675 468 0 55,958 470 2 57,778 473 0 81,261 474 0 127,867 474 3 136,719 480 1 74,50 486 0 437,119 491 1 114,480 502 1 57,995 512 1 73,478 513 0 12,455 517 3 127,1002 517 1 49,538 518 2 466,166 519 2 368,0 523 3 108,562 524 3 291,830 525 0 173,0 526 0 214,878 526 0 125,0 527 0 462,515 529 3 143,590 542 1 89,376 544 2 229,474 552 2 397,16 555 3 171,1002 559 1 152,69 561 0 285,224 564 3 142,444 564 3 216,881 569 1 297,964 574 2 33,278 576 0 457,514 577 0 29,618 577 2 371,858 579 3 145,606 584 2 183,860 587 2 34,607 592 0 396,0 593 0 36,244 606 0 652,0 614 3 90,446 619 0 264,832 620 2 259,410 621 0 231,490 622 3 24,852 624 3 151,348 627 3 160,987 651 0 16,0 652 0 518,1002 652 1 109,266 654 2 273,483 654 3 19,502 657 3 200,0 679 2 3,1 680 0 29,2 681 3 173,1 682 3 100,488 684 0 59,349 691 3 80,393 696 1 3,764 696 2 196,402 698 2 13,523 698 0 131,610 710 2 39,377 711 1 94,222 717 0 370,596 718 1 218,0 728 3 181,607 736 3 231,294 742 3 137,38 746 0 324,544 750 3 158,552 751 2 136,444 753 0 559,0 754 0 84,180 755 2 67,355 772 1 133,969 772 1 223,0 779 3 116,980 782 3 23,793 783 3 55,990 794 2 43,0 809 3 175,76 812 3 55,775 832 0 147,898 833 2 140,204 834 0 7,327 836 3 71,360 856 0 466,523 857 0 16,295 858 0 171,529 890 1 95,103 893 3 87,84 894 3 52,566 901 3 19,688 917 0 190,674 919 1 23,934 921 0 69,0 922 0 300,463 926 1 59,371 935 0 279,625 938 3 59,174 942 3 58,403 951 3 9,524 957 2 19,601 960 0 245,903 967 1 11,197 992 0 747,583 994 0 420,0 995 0 46"
  .split(",")
  .map(v => v.split(" ").map(Number));
const size = 1003;
const d = [[1, 0], [-1, 1], [0, 1], [1, 1]];

const out = Array.from({ length: size }, _ => Array(size).fill("."));
for (const [x, y, idx, len] of lines) {
  let [tx, ty] = [x, y];
  const [dx, dy] = d[idx];
  for (let i = 0; i < len; i++) {
    out[ty][tx] = "#";
    tx += dx;
    ty += dy;
  }
}
require("fs").writeFileSync("./out.txt", out.map(v => v.join("")).join("\n") + "\n");
